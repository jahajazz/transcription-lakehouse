name: Quality Assessment Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'src/lakehouse/quality/**'
      - 'tests/test_quality_*.py'
      - '.github/workflows/quality-tests.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'src/lakehouse/quality/**'
      - 'tests/test_quality_*.py'
  workflow_dispatch:  # Allow manual trigger

jobs:
  schema-validation:
    name: Schema Validation Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pandas numpy pyarrow pyyaml
          pip install -e .
      
      - name: Run schema validation tests
        run: |
          pytest tests/test_quality_schema_validation.py -v --tb=short --color=yes
        continue-on-error: false
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: schema-test-results
          path: |
            .pytest_cache/
            htmlcov/

  integration-tests:
    name: Integration Tests (Quick)
    runs-on: ubuntu-latest
    needs: schema-validation
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pandas numpy pyarrow pyyaml pytest-cov
          pip install -e .
      
      - name: Run integration tests (without real data)
        run: |
          pytest tests/test_quality_integration.py -v --tb=short --color=yes -m "not integration"
        continue-on-error: false
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: integration-test-results
          path: |
            .pytest_cache/
            htmlcov/

  full-integration:
    name: Full Integration Tests (with data)
    runs-on: ubuntu-latest
    needs: integration-tests
    if: github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pandas numpy pyarrow pyyaml pytest-cov
          pip install -e .
      
      - name: Check for lakehouse data
        id: check-data
        run: |
          if [ -d "lakehouse/spans" ] && [ -d "lakehouse/beats" ]; then
            echo "data_available=true" >> $GITHUB_OUTPUT
          else
            echo "data_available=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Run full integration tests
        if: steps.check-data.outputs.data_available == 'true'
        run: |
          pytest tests/test_quality_integration.py -v --tb=short --color=yes -m "integration" --cov=src.lakehouse.quality --cov-report=html --cov-report=term
      
      - name: Skip full integration tests
        if: steps.check-data.outputs.data_available == 'false'
        run: |
          echo "⚠️ Skipping full integration tests - lakehouse data not available"
          echo "These tests require real lakehouse data to run"
      
      - name: Upload coverage report
        if: steps.check-data.outputs.data_available == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: htmlcov/

  status-check:
    name: All Tests Passed
    runs-on: ubuntu-latest
    needs: [schema-validation, integration-tests]
    if: always()
    
    steps:
      - name: Check test results
        run: |
          if [ "${{ needs.schema-validation.result }}" != "success" ]; then
            echo "❌ Schema validation tests failed"
            exit 1
          fi
          if [ "${{ needs.integration-tests.result }}" != "success" ]; then
            echo "❌ Integration tests failed"
            exit 1
          fi
          echo "✅ All quality tests passed!"

